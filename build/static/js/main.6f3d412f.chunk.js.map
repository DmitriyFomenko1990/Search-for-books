{"version":3,"sources":["components/header/header.module.scss","components/content/book-page/books-page.module.scss","components/content/book/book.module.scss","components/content/books-list.module.scss","components/loader/loader.module.scss","App.module.scss","components/content/books-list/content.module.scss","store/redux/books-reducer-types.ts","api/api.ts","store/redux/action-creators.ts","components/header/Header.tsx","store/redux/books-reducer.ts","store/redux/combine-reducers.ts","components/loader/Loader.tsx","components/content/book/Book.tsx","components/content/BooksList.tsx","components/content/books-list/BookListContainer.tsx","components/content/book-page/BooksPage.tsx","components/content/book-page/BookPageContainer.tsx","components/content/books-list/Content.tsx","App.tsx","reportWebVitals.ts","store/state.ts","index.tsx"],"names":["module","exports","booksActionsType","axiosInstance","axios","create","baseURL","booksAPI","filter","categories","start","sort","get","process","then","response","data","id","fetchBooks","currentPage","prevState","totalPages","dispatch","a","state","items","nextPage","totalItems","Math","ceil","setTotalPagesActionCreator","setTotalItemsActionCreator","setBooksActionCreator","setCurrentPageActionCreator","setIsErrorActionCreator","fetchBook","setBookActionCreator","books","type","FETCH_BOOKS","payload","book","FETCH_BOOK","isError","SET_ERROR","setFilterActionCreator","SET_FILTER","setSortActionCreator","SET_SORT","setCategoryActionCreator","category","SET_CATEGORY","page","SET_CURRENT_PAGE","pages","SET_TOTAL_PAGES","SET_TOTAL_ITEMS","Header","useDispatch","history","useHistory","useState","inputValue","setInputValue","setSort","setCategory","isSearch","setIsSearch","useEffect","dispatchSort","dispatchCategory","push","className","style","wrapper","title","form","onSubmit","e","preventDefault","textInput","value","onChange","currentTarget","selectsWrapper","label","selectInput","submitBtn","initialBooksState","isServerError","booksReducer","action","reducers","combineReducers","bookReducer","useTypedSelector","useSelector","Loader","progressBar","progress","Book","image","volumeInfo","imageLinks","thumbnail","length","bookCategories","bookTitle","bookAuthors","authors","toString","to","src","BooksList","booksState","isFetching","setIsFetching","booksArray","map","index","asyncFetch","booksContainer","moreBtn","onClick","BookListContainer","BooksPage","isFetch","setIsFetch","join","description","coverWrapper","bookImage","aboutWrapper","descWrapper","dangerouslySetInnerHTML","__html","BookPageContainer","url","useRouteMatch","Content","exact","path","render","App","styles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3d412f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__wZLBc\",\"title\":\"header_title__dbjaC\",\"form\":\"header_form__3Har7\",\"textInput\":\"header_textInput__3vTaX\",\"selectsWrapper\":\"header_selectsWrapper__1COzq\",\"selectInput\":\"header_selectInput__2oES7\",\"label\":\"header_label__KKKtC\",\"submitBtn\":\"header_submitBtn__34_DB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"books-page_wrapper__cLC7D\",\"coverWrapper\":\"books-page_coverWrapper__3LXJk\",\"bookImage\":\"books-page_bookImage__23T9d\",\"aboutWrapper\":\"books-page_aboutWrapper__2JhWV\",\"categories\":\"books-page_categories__2Z5Q7\",\"title\":\"books-page_title__C0t4C\",\"authors\":\"books-page_authors__2gtl_\",\"descWrapper\":\"books-page_descWrapper__371nw\",\"description\":\"books-page_description__qtnwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"book_wrapper__3Zzcv\",\"image\":\"book_image__1sZUt\",\"category\":\"book_category__4-FHd\",\"title\":\"book_title__2H5UE\",\"authors\":\"book_authors__23vf9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"books-list_wrapper__3MV3q\",\"title\":\"books-list_title__1ezth\",\"booksContainer\":\"books-list_booksContainer__1KKm_\",\"moreBtn\":\"books-list_moreBtn__1KUu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"loader_wrapper__vU9np\",\"progressBar\":\"loader_progressBar__1nL-Y\",\"progress\":\"loader_progress__1t44n\",\"loader\":\"loader_loader__1Vi3h\",\"mobilLoader\":\"loader_mobilLoader__3e8JU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__38e29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"content_wrapper__cl3lO\"};","interface ImageLinksTypes {\r\n    smallThumbnail: string;\r\n    thumbnail: string;\r\n    small: string;\r\n    medium: string;\r\n    large: string;\r\n    extraLarge: string;\r\n}\r\ninterface VolumeInfoTypes {\r\n    title?: string;\r\n    authors?: string[];\r\n    description?: string;\r\n    categories?: string[];\r\n    imageLinks: ImageLinksTypes;\r\n\r\n}\r\nexport interface BookType {\r\n    volumeInfo?: VolumeInfoTypes;\r\n    id?: string;\r\n}\r\nexport type category = \"all\" | \"art\" | \"biography\" | \"computers\" | \"history\" | \"medical\" | \"poetry\";\r\nexport type sort = \"relevance\" | \"newest\";\r\nexport interface BookStateType {\r\n    filter: string;\r\n    category: category;\r\n    sort: sort;\r\n    totalItems: number;\r\n    currentPage: number;\r\n    totalPages: number;\r\n    isServerError: boolean;\r\n    books: [] | BookType[];\r\n    book: BookType;\r\n}\r\nexport enum booksActionsType {\r\n    FETCH_BOOKS = 'FETCH_BOOKS',\r\n    FETCH_BOOK = 'FETCH_BOOK',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_FILTER = 'SET_FILTER',\r\n    SET_SORT = 'SET_SORT',\r\n    SET_CATEGORY = 'SET_CATEGORY',\r\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\r\n    SET_TOTAL_PAGES = 'SET_TOTAL_PAGES',\r\n    SET_TOTAL_ITEMS = 'SET_TOTAL_ITEMS'\r\n}\r\n\r\ninterface FetchBooksAction{\r\n    type: booksActionsType.FETCH_BOOKS;\r\n    payload: BookType[];\r\n}\r\ninterface FetchBookAction{\r\n    type: booksActionsType.FETCH_BOOK;\r\n    payload: BookType;\r\n}\r\ninterface SetErrorAction{\r\n    type: booksActionsType.SET_ERROR;\r\n    payload: boolean;\r\n}\r\ninterface SetFilterAction{\r\n    type: booksActionsType.SET_FILTER;\r\n    payload: string;\r\n}\r\ninterface SetSortAction{\r\n    type: booksActionsType.SET_SORT;\r\n    payload: sort;\r\n}\r\ninterface SetCategoryAction{\r\n    type: booksActionsType.SET_CATEGORY;\r\n    payload: category;\r\n}\r\ninterface SetTotalPagesAction{\r\n    type: booksActionsType.SET_TOTAL_PAGES;\r\n    payload: number;\r\n}\r\ninterface SetCurrentPageAction{\r\n    type: booksActionsType.SET_CURRENT_PAGE;\r\n    payload: number;\r\n}\r\ninterface SetTotalItemsAction{\r\n    type: booksActionsType.SET_TOTAL_ITEMS;\r\n    payload: number;\r\n}\r\nexport type bookActions = FetchBooksAction | FetchBookAction | SetErrorAction | SetFilterAction | SetSortAction | SetCategoryAction  | SetTotalPagesAction | SetCurrentPageAction | SetTotalItemsAction;\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: ` https://www.googleapis.com/books/v1/`,\r\n});\r\n\r\nexport const booksAPI = {\r\n    getBooks(filter:string, categories: string, start:number, sort:string) {\r\n        return axiosInstance\r\n            .get(`volumes?q=${filter}+subject:${categories}&startIndex=${start}&maxResults=30&orderBy=${sort}&key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(response =>  response.data)\r\n    },\r\n    getBook(id: string) {\r\n        return axiosInstance\r\n            .get(`volumes${id}`)\r\n            .then(response =>  response.data)\r\n    },\r\n};\r\n","import {bookActions, booksActionsType, BookType, sort, category} from './books-reducer-types';\r\nimport {Dispatch} from 'redux';\r\nimport {booksAPI} from '../../api/api';\r\n\r\nexport const fetchBooks = (\r\n    filter:string,\r\n    categories: string,\r\n    sort:string,\r\n    currentPage:number,\r\n    prevState:BookType[],\r\n    totalPages: number) => {\r\n        return async (dispatch: Dispatch<bookActions>) =>{\r\n            try {\r\n                if (categories === 'all') {\r\n                    categories = '';\r\n                }\r\n                const response: any = await booksAPI.getBooks(filter, categories, currentPage, sort);\r\n                const state = [...prevState,...response.items];\r\n                const nextPage= ++currentPage;\r\n                if (totalPages !== response.totalItems) {\r\n                    totalPages = Math.ceil(response.totalItems / 30)\r\n                    dispatch(setTotalPagesActionCreator(totalPages));\r\n                    dispatch(setTotalItemsActionCreator(response.totalItems));\r\n                }\r\n                dispatch(setBooksActionCreator(state));\r\n                dispatch(setCurrentPageActionCreator(nextPage));\r\n            } catch (err) {\r\n                dispatch(setIsErrorActionCreator(true));\r\n            }\r\n        }\r\n}\r\n\r\nexport const fetchBook = (id: string) => {\r\n    return async (dispatch: Dispatch<bookActions>) =>{\r\n        try {\r\n            const response: BookType = await booksAPI.getBook(id);\r\n            dispatch(setBookActionCreator(response));\r\n        } catch (err) {\r\n            dispatch(setIsErrorActionCreator(true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const dispatchFilter = (filter: string) => (dispatch: Dispatch<bookActions>) => {\r\n    dispatch(setFilterActionCreator(filter));\r\n}\r\nexport const dispatchSort = (sort: sort) =>  (dispatch: Dispatch<bookActions>) =>{\r\n    dispatch(setSortActionCreator(sort));\r\n}\r\n\r\nexport const dispatchCategory = (category: category) => (dispatch: Dispatch<bookActions>) =>{\r\n    dispatch(setCategoryActionCreator(category));\r\n}\r\nexport const dispatchBooks = (books: BookType[]) => (dispatch: Dispatch<bookActions>) =>{\r\n    dispatch(setBooksActionCreator(books));\r\n}\r\nexport const dispatchCurrentPage = (page: number) => (dispatch: Dispatch<bookActions>) =>{\r\n    dispatch(setCurrentPageActionCreator(page));\r\n}\r\n\r\nconst setBooksActionCreator = (books: BookType[]): bookActions  => ({type: booksActionsType.FETCH_BOOKS, payload: books});\r\nconst setBookActionCreator = (book: BookType): bookActions  => ({type: booksActionsType.FETCH_BOOK, payload: book});\r\nconst setIsErrorActionCreator = (isError: boolean): bookActions  => ({type: booksActionsType.SET_ERROR, payload: isError});\r\nconst setFilterActionCreator = (filter: string): bookActions  => ({type: booksActionsType.SET_FILTER, payload: filter});\r\nconst setSortActionCreator = (sort: sort): bookActions  => ({type: booksActionsType.SET_SORT, payload: sort});\r\nconst setCategoryActionCreator = (category: category): bookActions  => ({type: booksActionsType.SET_CATEGORY, payload: category});\r\nconst setCurrentPageActionCreator = (page: number): bookActions  => ({type: booksActionsType.SET_CURRENT_PAGE, payload: page});\r\nconst setTotalPagesActionCreator = (pages: number): bookActions  => ({type: booksActionsType.SET_TOTAL_PAGES, payload: pages});\r\nconst setTotalItemsActionCreator = (items: number): bookActions  => ({type: booksActionsType.SET_TOTAL_ITEMS, payload: items});","import React, {useEffect, useState} from 'react';\r\nimport style from './header.module.scss';\r\nimport {category, sort} from '../../store/redux/books-reducer-types';\r\nimport {\r\n    dispatchBooks,\r\n    dispatchCategory, dispatchCurrentPage,\r\n    dispatchFilter,\r\n    dispatchSort,\r\n} from '../../store/redux/action-creators';\r\nimport {useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Header: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [sort, setSort] = useState<sort>('relevance');\r\n    const [category, setCategory] = useState<category>('all');\r\n    const [isSearch, setIsSearch] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if (isSearch) {\r\n            dispatch(dispatchSort(sort));\r\n            dispatch(dispatchCategory(category));\r\n            dispatch(dispatchFilter(inputValue));\r\n            dispatch(dispatchCurrentPage(1))\r\n            dispatch(dispatchBooks( []));\r\n            setIsSearch(false);\r\n            history.push(\"/\");\r\n        }\r\n    }, [isSearch])\r\n\r\n    const onHandleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setIsSearch(true);\r\n    };\r\n    const onHandleChange = (e:React.FormEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value);\r\n    };\r\n    const onCategoryChange = (e: any) => {\r\n        setCategory(e.currentTarget.value)\r\n    }\r\n    const onSortChange = (e: any) => {\r\n        setSort(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <header className={style.wrapper}>\r\n            <h1 className={style.title}>Search for books</h1>\r\n            <form className={style.form} onSubmit={onHandleSubmit}>\r\n                <input className={style.textInput} type='text'\r\n                       value={inputValue} onChange={onHandleChange}/>\r\n                <div className={style.selectsWrapper}>\r\n                    <label className={style.label}>\r\n                        Categories\r\n                        <select className={style.selectInput} value={category}\r\n                                onChange={onCategoryChange}>\r\n                            <option value=\"all\">all</option>\r\n                            <option value=\"art\">art</option>\r\n                            <option value=\"biography\">biography</option>\r\n                            <option value=\"computers\">computers</option>\r\n                            <option value=\"history\">history</option>\r\n                            <option value=\"medical\">medical</option>\r\n                            <option value=\"poetry\">poetry</option>\r\n                        </select>\r\n                    </label>\r\n                    <label  className={style.label}>\r\n                        Sorting by\r\n                        <select className={style.selectInput} value={sort}\r\n                                onChange={onSortChange}>\r\n                            <option value=\"relevance\">relevance</option>\r\n                            <option value=\"newest\">newest</option>\r\n                        </select>\r\n                    </label>\r\n                    <button className={style.submitBtn} type='submit' />\r\n                </div>\r\n\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {BookStateType, booksActionsType, bookActions} from './books-reducer-types';\r\n\r\nexport const initialBooksState: BookStateType = {\r\n    filter: '',\r\n    category: 'all',\r\n    sort: 'relevance',\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    totalItems: 0,\r\n    isServerError: false,\r\n    books: [],\r\n    book: {}\r\n};\r\n\r\nconst booksReducer = (state = initialBooksState, action: bookActions): BookStateType => {\r\n    switch (action.type) {\r\n        case booksActionsType.FETCH_BOOKS :\r\n            return {...state, books: action.payload}\r\n        case booksActionsType.FETCH_BOOK :\r\n            return {...state, book: action.payload}\r\n        case booksActionsType.SET_ERROR :\r\n            return {...state, isServerError: action.payload}\r\n        case booksActionsType.SET_FILTER:\r\n            return {...state, filter: action.payload}\r\n        case booksActionsType.SET_SORT:\r\n            return {...state, sort: action.payload}\r\n        case booksActionsType.SET_CATEGORY:\r\n            return {...state, category: action.payload}\r\n        case booksActionsType.SET_TOTAL_PAGES:\r\n            return {...state, totalPages: action.payload}\r\n        case booksActionsType.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload}\r\n        case booksActionsType.SET_TOTAL_ITEMS:\r\n            return {...state, totalItems: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport default booksReducer;","import {combineReducers} from 'redux';\r\nimport booksReducer from './books-reducer';\r\nimport {TypedUseSelectorHook, useSelector} from 'react-redux';\r\n\r\nexport const reducers = combineReducers({\r\n    bookReducer: booksReducer,\r\n});\r\n\r\nexport type bookState = ReturnType<typeof reducers>;\r\n\r\nexport  const useTypedSelector: TypedUseSelectorHook<bookState> = useSelector;","import React from \"react\";\r\nimport style from \"./loader.module.scss\";\r\n\r\n\r\nconst Loader: React.FC = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h4>Loading</h4>\r\n            <div className={style.progressBar}>\r\n                <span  className={style.progress}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport style from './book.module.scss';\r\nimport {BookType} from '../../../store/redux/books-reducer-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Book: React.FC<{ book: BookType }> = ({book}) => {\r\n    const image = book.volumeInfo?.imageLinks?.thumbnail?.length ?  book.volumeInfo.imageLinks?.thumbnail : '';\r\n    const bookCategories = book.volumeInfo?.categories?.length ? book.volumeInfo.categories[0] : '';\r\n    const bookTitle = book.volumeInfo?.title?.length ? book.volumeInfo.title : '';\r\n    const bookAuthors =  book.volumeInfo?.authors?.length ? book.volumeInfo.authors?.toString() : '';\r\n    return (\r\n        <Link to={`${book.id}`}>\r\n           <div className={style.wrapper}>\r\n               <img className={style.image} src={image}/>\r\n               <p className={style.category}>{bookCategories}</p>\r\n               <p className={style.title}>{bookTitle}</p>\r\n               <p className={style.authors}>{bookAuthors}</p>\r\n           </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Book;","import React, {useEffect, useState} from 'react';\r\nimport style from './books-list.module.scss';\r\nimport {BookStateType} from '../../store/redux/books-reducer-types';\r\nimport Book from './book/Book';\r\nimport {fetchBooks} from '../../store/redux/action-creators';\r\nimport {useDispatch} from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\n\r\ninterface BooksListType {\r\n    booksState: BookStateType;\r\n}\r\n\r\nconst BooksList: React.FC<BooksListType> = ({booksState}) => {\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const filter = booksState.filter;\r\n    const sort = booksState.sort;\r\n    const category = booksState.category;\r\n    const currentPage = booksState.currentPage;\r\n    const totalPages = booksState.totalPages;\r\n    const books = booksState.books;\r\n    let booksArray: JSX.Element[] = [];\r\n    if (books !== [])  {\r\n        booksArray =  books.map((book, index) =>  <Book book={book} key={index} />)\r\n    }\r\n    const asyncFetch = async () => {\r\n        await dispatch(fetchBooks(filter, category, sort, currentPage, books, totalPages));\r\n        setIsFetching(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isFetching) {\r\n            asyncFetch();\r\n        }\r\n    }, [isFetching]);\r\n\r\n    const fetchMoreBooks = () => {\r\n        setIsFetching(true)\r\n    }\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h3 className={style.title}>Found {booksState.totalItems} result</h3>\r\n            <div className={style.booksContainer}>\r\n                {booksArray}\r\n            </div>\r\n            {isFetching\r\n                ? <Loader />\r\n                : <button className={style.moreBtn} onClick={fetchMoreBooks}>More books</button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BooksList;","import React, {useEffect, useState} from 'react';\r\nimport {BookStateType} from '../../../store/redux/books-reducer-types';\r\nimport {useTypedSelector} from '../../../store/redux/combine-reducers';\r\nimport Loader from '../../loader/Loader';\r\nimport BooksList from '../BooksList';\r\nimport {useDispatch} from 'react-redux';\r\nimport {fetchBooks} from '../../../store/redux/action-creators';\r\n\r\nconst BookListContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const booksState: BookStateType = useTypedSelector(state => state.bookReducer);\r\n    const filter = booksState.filter;\r\n    const sort = booksState.sort;\r\n    const category = booksState.category;\r\n    const currentPage = booksState.currentPage;\r\n    const totalPages = booksState.totalPages;\r\n    const books = booksState.books;\r\n    useEffect(() => {\r\n        dispatch(fetchBooks(filter, category, sort, currentPage, books, totalPages));\r\n    }, [filter, sort, category]);\r\n    return (\r\n        books.length\r\n            ? <BooksList booksState={booksState} />\r\n            : <Loader />\r\n    );\r\n};\r\n\r\nexport default BookListContainer;","import React from 'react';\r\nimport style from './books-page.module.scss';\r\nimport {BookStateType} from '../../../store/redux/books-reducer-types';\r\nimport {useTypedSelector} from '../../../store/redux/combine-reducers';\r\n\r\ninterface BooksPageType {\r\n    isFetch: boolean;\r\n    setIsFetch:  React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\nconst BooksPage: React.FC<BooksPageType> = ({isFetch,setIsFetch}) => {\r\n    const booksState: BookStateType = useTypedSelector(state => state.bookReducer);\r\n    const categories = booksState.book.volumeInfo?.categories?.join(' / ');\r\n    const  title = booksState.book.volumeInfo?.title;\r\n    const  authors = booksState.book.volumeInfo?.authors?.join(', ');\r\n    let  description: string = '';\r\n    if (booksState.book.volumeInfo?.description){\r\n        description = booksState.book.volumeInfo?.description;\r\n    }\r\n    function createDescriptionElement() {\r\n        return {\r\n            __html: description };\r\n    };\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.coverWrapper}>\r\n                <img className={style.bookImage} src={booksState.book.volumeInfo?.imageLinks?.thumbnail} />\r\n            </div>\r\n            <div className={style.aboutWrapper}>\r\n                <p className={style.categories}>{categories}</p>\r\n                <h3 className={style.title}>{title}</h3>\r\n                <p className={style.authors}>{authors}</p>\r\n                <div className={style.descWrapper}>\r\n                    <div className={style.description} dangerouslySetInnerHTML={createDescriptionElement()}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BooksPage;","import React, {useEffect, useState} from 'react';\r\nimport Loader from '../../loader/Loader';\r\nimport BooksPage from './BooksPage';\r\nimport {fetchBook} from \"../../../store/redux/action-creators\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useRouteMatch} from \"react-router-dom\";\r\n\r\nconst BookPageContainer = () => {\r\n    const [isFetch, setIsFetch] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const { url } = useRouteMatch();\r\n\r\n    const asyncFetch = async () => {\r\n        await dispatch(fetchBook(url));\r\n        setIsFetch(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        asyncFetch();\r\n    },[]);\r\n    return (\r\n        isFetch\r\n            ? <Loader />\r\n            : <BooksPage isFetch={isFetch} setIsFetch={setIsFetch} />\r\n    );\r\n};\r\n\r\nexport default BookPageContainer;","import React from 'react';\r\nimport style from './content.module.scss';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport BookListContainer from './BookListContainer';\r\nimport BookPageContainer from '../book-page/BookPageContainer';\r\n\r\nconst Content: React.FC = () => {\r\n    return (\r\n       <div className={style.wrapper}>\r\n           <Switch>\r\n               <Route exact path='/' render={() => <BookListContainer />}/>\r\n               <Route path='/:bookId' render={() => <BookPageContainer/>}/>\r\n           </Switch>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport styles from './App.module.scss';\nimport Header from './components/header/Header';\nimport Content from './components/content/books-list/Content';\n\nfunction App()  {\n  return (\n    <div className={styles.App}>\n        <Header />\n        <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {reducers} from './redux/combine-reducers'\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store/state';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <BrowserRouter>\n                <App />\n          </BrowserRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}